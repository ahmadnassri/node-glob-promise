# ----------------------------------------------- #
# Note: this file originates in template-node-lib #
# ----------------------------------------------- #

on:
  - push
  - workflow_dispatch

name: push

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}

jobs:
  metadata:
    runs-on: ubuntu-latest

    outputs:
      dockerfile: ${{ steps.dockerfile.outputs.exists }}
      repository_is_template: ${{ steps.metadata.outputs.repository_is_template }}
      repository_default_branch: ${{ steps.metadata.outputs.repository_default_branch }}


    steps:
      - uses: actions/checkout@v3

      - id: metadata
        uses: ahmadnassri/action-metadata@v2.1.1

      - id: dockerfile
        run: |
          [[ -f "${{ github.workspace }}/Dockerfile" ]] && echo '::set-output name=exists::yes' || exit 0

  commit-lint:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ahmadnassri/action-commit-lint@v1
        with:
          config: .github/linters/.commit-lint.yml

  mega-linter:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - uses: oxsecurity/megalinter/flavors/javascript@v6
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MEGALINTER_CONFIG: .github/linters/.mega-linter.yml
          GITHUB_COMMENT_REPORTER: true
          GITHUB_STATUS_REPORTER: true

      - uses: actions/upload-artifact@v2
        if: ${{ success() }} || ${{ failure() }}
        with:
          name: mega-linter-reports
          path: |
            megalinter-reports
            mega-linter.log

  npm-audit:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3.4.1
        with:
          node-version: latest

      - run: npm audit --audit-level=critical

  test-strategy:
    timeout-minutes: 5

    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.parse.outputs.matrix }}

    steps:
      - uses: actions/checkout@v3
      - id: parse
        run: echo "::set-output name=matrix::$(jq -c . < .github/test-matrix.json)"

  test-run:
    needs:
      - npm-audit
      - test-strategy

    timeout-minutes: 5

    name: ${{ matrix.name || format('node v{0} @ {1}', matrix.node-version, matrix.os) || 'test-step' }}

    strategy:
      matrix: ${{ fromJSON(needs.test-strategy.outputs.matrix) }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-node@v3.4.1
        with:
          registry-url: https://npm.pkg.github.com
          node-version: ${{ matrix.node-version }}
          cache: npm

      - run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: npm run test:ci

  release:
    needs:
      - metadata
      - test-run
      - commit-lint
      - mega-linter

    # only runs on main branch for non template repos
    if: |
      needs.metadata.outputs.repository_is_template == 'false' &&
      needs.metadata.outputs.repository_default_branch == github.ref_name

    timeout-minutes: 20

    runs-on: ubuntu-latest

    outputs:
      published: ${{ steps.release.outputs.published }}
      version: ${{ steps.release.outputs.release-version }}
      version-major: ${{ steps.release.outputs.release-version-major }}
      version-minor: ${{ steps.release.outputs.release-version-minor }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - id: release
        uses: ahmadnassri/action-semantic-release@v2
        with:
          config: ${{ github.workspace }}/.semantic.json
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  mirror:
    needs: release

    timeout-minutes: 5

    runs-on: ubuntu-latest

    if: ${{ needs.release.outputs.published == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-node@v3.4.1
        with:
          registry-url: https://npm.pkg.github.com
          node-version: latest

      - name: publish to github registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jq '.name = "@'"${GITHUB_REPOSITORY/node-/}"'"' package.json > /tmp/package.json; mv /tmp/package.json .
          npm version --no-git-tag-version "v${{ needs.release.outputs.version }}"
          npm publish

  publish-docker:
    needs:
      - release
      - metadata

    timeout-minutes: 5

    runs-on: ubuntu-latest

    if: ${{ needs.metadata.outputs.dockerfile == 'yes' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/cache@v3.0.8
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: buildx-

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      # login to docker hub
      - uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # login to github container registry
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - id: meta
        run: |
          echo "::set-output name=name::${{ github.repository_owner }}/$(basename "${GITHUB_REPOSITORY/node-//}")"

      # publish
      - uses: docker/build-push-action@v3
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{ steps.meta.outputs.name }}:latest
            ${{ steps.meta.outputs.name }}:v${{ needs.release.outputs.version-major }}.${{ needs.release.outputs.version-minor }}
            ${{ steps.meta.outputs.name }}:v${{ needs.release.outputs.version-major }}
            ${{ steps.meta.outputs.name }}:v${{ needs.release.outputs.version }}
            ghcr.io/${{ steps.meta.outputs.name }}:latest
            ghcr.io/${{ steps.meta.outputs.name }}:v${{ needs.release.outputs.version-major }}.${{ needs.release.outputs.version-minor }}
            ghcr.io/${{ steps.meta.outputs.name }}:v${{ needs.release.outputs.version-major }}
            ghcr.io/${{ steps.meta.outputs.name }}:v${{ needs.release.outputs.version }}
          labels: |
            org.opencontainers.image.title=${{ steps.meta.outputs.name }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ needs.release.outputs.version }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}

  template-sync:
    timeout-minutes: 20

    needs:
      - metadata
      - test-run
      - commit-lint
      - mega-linter

    # only runs on main branch for template repos
    if: |
      needs.metadata.outputs.repository_is_template == 'true' &&
      needs.metadata.outputs.repository_default_branch == github.ref_name

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ahmadnassri/action-template-repository-sync@v2
        with:
          github-token: ${{ secrets.GH_TOKEN }}
